/* == CVARLIB.HPP ========================================================== */
/* ######################################################################### */
/* ## MS-ENGINE              Copyright (c) MS-Design, All Rights Reserved ## */
/* ######################################################################### */
/* ## This module actually defines the cvars and their callbacks. Use the ## */
/* ## below macros CV* to create the callbacks and new cvars to the       ## */
/* ## cvEngList global array below.                                       ## */
/* ######################################################################### */
/* ========================================================================= */
#pragma once                           // Only one incursion allowed
/* -- Module namespace ----------------------------------------------------- */
namespace IfCVarLib {                  // Keep declarations neatly categorised
/* -- Includes ------------------------------------------------------------- */
using namespace IfCore;                // Using core interface
/* == Built-in CVar definition struct ====================================== */
const ItemStaticList cvEngList{ {      // Default cvars (from cvars.hpp)
/* -- Useful macros to help make this simpler ------------------------------ */
// Define cvar:-
// > mi = minimum gui mode id allowed. (see GuiMode for values).
// > ma = maximum gui mode id allowed. (see GuiMode for values).
// > n  = cvar name (from * namespace in cvardef.hpp)
// > cb = cvar callback. (defined as lambda).
// > t  = cvar type. (integer types only as string fed to ToNumber()).
// > f  = cvar flags. (from Flag.* namespace in cvardef.hpp).
#define CV(mi,ma,n,cb,f) \
  { GM_ ## mi, GM_ ## ma, cvKeyValueStaticList[n], cb, f }
// Define cvar with a callback as a string value
#define CVS(mi,ma,n,cb,f) CV(mi, ma, n, CBSTR(cb), f)
// Define cvar with a callback as an built-in value type 't'
#define CVI(mi,ma,n,cb,t,f) CV(mi, ma, n, CB(cb, t), f)
// Define cvar without a callback
#define CVN(mi,ma,n,f) CV(mi, ma, n, NoOp, f)
/* -- Macro helpers to define callback functions --------------------------- */
#define CB(f,t) [](Item &, const string &strV)->CVarReturn\
  { return f(ToNumber<t>(strV)); }
#define CBSTR(f) [](Item &ciD, const string &strV)->CVarReturn\
  { return f(strV, ciD.GetModifyableValue()); }
/* -- Core cvars (don't modify order) -------------------------------------- */
CVI(TEXT_NOAUDIO, HIGHEST, LOG_LEVEL, cLog->SetLevel,
  unsigned int, TUINTEGER|PANY),
CVS(TEXT_NOAUDIO, HIGHEST, APP_CMDLINE, CoreParseCmdLine,
  CONFIDENTIAL|TSTRING|MTRIM|PBOOT),
CVI(TEXT_NOAUDIO, HIGHEST, AST_LZMABUFFER, ArchiveSetBufferSize,
  size_t, TUINTEGER|CPOW2|PBOOT|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, AST_PIPEBUFFER, AssetSetPipeBufferSize,
  size_t, TUINTEGER|CPOW2|PANY),
CVI(TEXT_NOAUDIO, HIGHEST, AST_FSOVERRIDE, AssetSetFSOverride,
  bool, TBOOLEAN|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, AST_EXEBUNDLE, ArchiveInitExe,
  bool, TBOOLEAN|PBOOT),
CVS(TEXT_NOAUDIO, HIGHEST, APP_BASEDIR, cSystem->SetWorkDir,
  CONFIDENTIAL|TSTRING|CTRUSTEDFN|MTRIM|PBOOT),
CVS(TEXT_NOAUDIO, HIGHEST, AST_BUNDLES, ArchiveInit,
  TSTRING|MTRIM|PBOOT),
CVS(TEXT_NOAUDIO, HIGHEST, APP_CONFIG, cCVars->ExecuteAppConfig,
  TSTRING|CFILENAME|MTRIM|PBOOT),
CVS(TEXT_NOAUDIO, HIGHEST, APP_HOMEDIR, CoreSetHomeDir,
  CONFIDENTIAL|TSTRING|CTRUSTEDFN|MTRIM|PBOOT),
CVS(TEXT_NOAUDIO, HIGHEST, SQL_DB, cSql->UdbFileModified,
  CONFIDENTIAL|TSTRING|CTRUSTEDFN|MTRIM|PBOOT),
CVI(TEXT_NOAUDIO, HIGHEST, SQL_ERASEEMPTY, cSql->DeleteEmptyDBModified,
  bool, TBOOLEAN|PSYSTEM),
CVS(TEXT_NOAUDIO, HIGHEST, SQL_TEMPSTORE, cSql->TempStoreModified,
  TSTRING|MTRIM|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, SQL_SYNCHRONOUS, cSql->SynchronousModified,
  bool, TBOOLEAN|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, SQL_JOURNALMODE, cSql->JournalModeModified,
  bool, TBOOLEAN|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, SQL_AUTOVACUUM, cSql->AutoVacuumModified,
  bool, TBOOLEAN|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, SQL_FOREIGNKEYS, cSql->ForeignKeysModified,
  bool, TBOOLEAN|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, SQL_INCVACUUM, cSql->IncVacuumModified,
  uint64_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, SQL_DEFAULTS, cCVars->SetDefaults,
  unsigned int, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, SQL_LOADCONFIG, cCVars->LoadSettings,
  bool, TBOOLEAN|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, APP_GUIMODE, cSystem->SetGUIMode,
  unsigned int, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, LOG_LINES, cLog->LogLinesModified,
  size_t, TUINTEGERSAVE|PANY),
CVS(TEXT_NOAUDIO, HIGHEST, LOG_FILE, cLog->LogFileModified,
  TSTRING|CFILENAME|MTRIM|PBOOT|PUSR),
CVN(TEXT_NOAUDIO, HIGHEST, APP_LONGNAME,
  TSTRING|CNOTEMPTY|MTRIM|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, APP_CLEARMUTEX, CoreClearMutex,
  bool, TBOOLEAN|PBOOT),
CVI(TEXT_NOAUDIO, HIGHEST, ERR_INSTANCE, CoreSetOneInstance,
  bool, TBOOLEAN|PSYSTEM),
/* -- Object cvars --------------------------------------------------------- */
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_CMDMAX,
  cConsole->MaxCountModified, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_CVARMAX,
  cCVars->MaxCountModified, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_CVARIMAX,
  cCVars->MaxICountModified, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_ARCHIVEMAX,
  cArchives->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_ASSETMAX,
  cAssets->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_BINMAX,
  cBins->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(GRAPHICS, HIGHEST, OBJ_CURSORMAX,
  cCursors->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_DYLIBMAX,
  cDyLibs->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(GRAPHICS, HIGHEST, OBJ_FBOMAX,
  cFbos->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(GRAPHICS, HIGHEST, OBJ_FONTMAX,
  cFonts->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_FILEMAX,
  cFiles->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_FTFMAX,
  cFtfs->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_FUNCMAX,
  cLuaFuncs->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_IMGMAX,
  cImages->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_IMGFMTMAX,
  cImageFmts->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_JSONMAX,
  cJsons->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_MASKMAX,
  cMasks->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_PCMMAX,
  cPcms->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_PCMFMTMAX,
  cPcmFmts->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_AUDIO, HIGHEST, OBJ_SAMPLEMAX,
  cSamples->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(GRAPHICS, HIGHEST, OBJ_SHADERMAX,
  cShaders->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_SOCKETMAX,
  cSockets->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_AUDIO, HIGHEST, OBJ_SOURCEMAX,
  cSources->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_STATMAX,
  cStats->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_AUDIO, HIGHEST, OBJ_STREAMMAX,
  cStreams->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(GRAPHICS, HIGHEST, OBJ_TEXTUREMAX,
  cTextures->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, OBJ_THREADMAX,
  cThreads->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
CVI(GRAPHICS, HIGHEST, OBJ_VIDEOMAX,
  cVideos->CollectorSetLimit, size_t, TUINTEGER|PSYSTEM),
/* -- Base cvars ----------------------------------------------------------- */
CVN(TEXT_NOAUDIO, HIGHEST, APP_SHORTNAME,
  TSTRING|CNOTEMPTY|MTRIM|PSYSTEM),
CVN(TEXT_NOAUDIO, HIGHEST, APP_DESCRIPTION,
  TSTRING|CNOTEMPTY|MTRIM|PSYSTEM),
CVN(TEXT_NOAUDIO, HIGHEST, APP_VERSION,
  TSTRING|CNOTEMPTY|MTRIM|PSYSTEM),
CVS(TEXT_NOAUDIO, HIGHEST, APP_ICON, cDisplay->SetIcon,
  TSTRING|MTRIM|PSYSTEM),
CVN(TEXT_NOAUDIO, HIGHEST, APP_AUTHOR,
  TSTRING|CNOTEMPTY|MTRIM|PSYSTEM),
CVN(TEXT_NOAUDIO, HIGHEST, APP_COPYRIGHT,
  TSTRING|CNOTEMPTY|MTRIM|PSYSTEM),
CVN(TEXT_NOAUDIO, HIGHEST, APP_WEBSITE,
  TSTRING|CNOTEMPTY|MTRIM|PSYSTEM),
CVI(GRAPHICS, HIGHEST, APP_TICKRATE, TimerTickRateModified,
  unsigned int, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, APP_DELAY, TimerSetDelay,
  unsigned int, TUINTEGERSAVE|PANY),
CVS(TEXT_NOAUDIO, HIGHEST, APP_TITLE, CoreTitleModified,
  TSTRING|MTRIM|PSYSTEM),
/* -- Error cvars ---------------------------------------------------------- */
CVI(TEXT_NOAUDIO, HIGHEST, ERR_ADMIN, cSystem->CheckAdminModified,
  unsigned int, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, ERR_CHECKSUM, cSystem->CheckChecksumModified,
  bool, TBOOLEAN|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, ERR_DEBUGGER, cSystem->CheckDebuggerDetected,
  bool, TBOOLEAN|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, ERR_LUAMODE, CoreErrorBehaviourModified,
  unsigned int, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, ERR_LMRESETLIMIT, CoreSetResetLimit,
  unsigned int, TUINTEGER|PSYSTEM),
CVI(GRAPHICS, HIGHEST, ERR_MINVRAM, cOgl->SetMinVRAM,
  uint64_t, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, ERR_MINRAM, cSystem->SetMinRAM,
  uint64_t, TUINTEGER|PSYSTEM),
/* -- Lua cvars ------------------------------------------------------------ */
CVI(TEXT_NOAUDIO, HIGHEST, LUA_TICKTIMEOUT, TimerSetTimeOut,
  unsigned int, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, LUA_TICKCHECK, cLua->SetOpsInterval,
  int, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, LUA_CACHE, LuaCodeSetCache,
  unsigned int, TUINTEGER|PANY),
CVI(TEXT_NOAUDIO, HIGHEST, LUA_SIZESTACK, cLua->SetStack,
  int, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, LUA_GCPAUSE, cLua->SetGCPause,
  int, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, LUA_GCSTEPMUL, cLua->SetGCStep,
  int, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, LUA_RANDOMSEED, cLua->SetSeed,
  lua_Integer, TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, LUA_APIFLAGS, cLua->SetFlags,
  unsigned int, TUINTEGER|PSYSTEM),
CVN(TEXT_NOAUDIO, HIGHEST, LUA_SCRIPT,
  TSTRING|CFILENAME|CNOTEMPTY|MTRIM|PSYSTEM),
/* -- Audio cvars ---------------------------------------------------------- */
CVI(TEXT_AUDIO, HIGHEST, AUD_DELAY, cAudio->SetAudThreadDelay,
  ALuint, TUINTEGERSAVE|PANY),
CVI(TEXT_AUDIO, HIGHEST, AUD_VOL, cAudio->SetGlobalVolume,
  ALfloat, TUFLOATSAVE|PANY),
CVN(TEXT_AUDIO, HIGHEST, AUD_INTERFACE,
  TINTEGERSAVE|PANY),
CVI(TEXT_AUDIO, HIGHEST, AUD_CHECK, cAudio->SetAudCheckRate,
  unsigned int, TUINTEGERSAVE|PANY),
CVI(TEXT_AUDIO, HIGHEST, AUD_NUMSOURCES, SourceSetCount,
  size_t, TUINTEGERSAVE|PANY),
CVI(TEXT_AUDIO, HIGHEST, AUD_SAMVOL, SetSampleVolume,
  ALfloat, TUFLOATSAVE|PANY),
CVI(TEXT_AUDIO, HIGHEST, AUD_STRBUFCOUNT, StreamSetBufferCount,
  size_t, TUINTEGERSAVE|PANY),
CVI(TEXT_AUDIO, HIGHEST, AUD_STRBUFSIZ, StreamSetBufferSize,
  size_t, TUINTEGERSAVE|CPOW2|PANY),
CVI(TEXT_AUDIO, HIGHEST, AUD_STRVOL, StreamSetVolume,
  ALfloat, TUFLOATSAVE|PANY),
CVI(TEXT_AUDIO, HIGHEST, AUD_FMVVOL, VideoSetVolume,
  ALfloat, TUFLOATSAVE|PANY),
CVN(TEXT_AUDIO, HIGHEST, AUD_HRTF,
  TUINTEGERSAVE|PANY),
/* -- Console cvars -------------------------------------------------------- */
CVI(GRAPHICS, HIGHEST, CON_KEYPRIMARY, cInput->SetConsoleKey1,
  int, TUINTEGERSAVE|PANY),
CVI(GRAPHICS, HIGHEST, CON_KEYSECONDARY, cInput->SetConsoleKey2,
  int, TUINTEGERSAVE|PANY),
CVI(TEXT_NOAUDIO, HIGHEST, CON_AUTOCOMPLETE, cConsole->SetAutoComplete,
  unsigned int, TUINTEGERSAVE|PANY),
CVI(TEXT_NOAUDIO, HIGHEST, CON_AUTOSCROLL, cConsole->SetAutoScroll,
  bool, TBOOLEANSAVE|PANY),
CVI(TEXT_NOAUDIO, HIGHEST, CON_AUTOCOPYCVAR, cConsole->SetAutoCopyCVar,
  bool, TBOOLEANSAVE|PANY),
CVI(GRAPHICS, HIGHEST, CON_HEIGHT, cConsole->SetHeight,
  GLfloat, TUFLOATSAVE|PANY),
CVI(TEXT_NOAUDIO, HIGHEST, CON_BLOUTPUT, cConsole->SetConsoleOutputLines,
  size_t, TUINTEGERSAVE|PANY),
CVI(TEXT_NOAUDIO, HIGHEST, CON_BLINPUT, cConsole->SetConsoleInputLines,
  size_t, TUINTEGERSAVE|PANY),
CVI(GRAPHICS, HIGHEST, CON_DISABLED, cConsole->SetCantDisable,
  bool, TBOOLEAN|PBOOT|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, CON_CVSHOWFLAGS, cCVars->SetDisplayFlags,
  unsigned int, TUINTEGER|PANY),
CVI(GRAPHICS, HIGHEST, CON_BGCOLOUR, cConsole->SetBackgroundColour,
  uint32_t, TUINTEGERSAVE|PANY),
CVN(GRAPHICS, HIGHEST, CON_BGTEXTURE,
  TSTRING|CFILENAME|PSYSTEM),
CVN(GRAPHICS, HIGHEST, CON_FONT,
  TSTRING|CFILENAME|PSYSTEM),
CVN(GRAPHICS, HIGHEST, CON_FONTFLAGS,
  TUINTEGER|PANY),
CVI(GRAPHICS, HIGHEST, CON_FONTCOLOUR, cConsole->SetTextColour,
  size_t, TUINTEGERSAVE|PANY),
CVN(GRAPHICS, HIGHEST, CON_FONTHEIGHT,
  TUINTEGER|PSYSTEM),
CVN(GRAPHICS, HIGHEST, CON_FONTPADDING,
  TUINTEGER|PSYSTEM),
CVN(GRAPHICS, HIGHEST, CON_FONTPCMIN,
  TUINTEGER|PSYSTEM),
CVN(GRAPHICS, HIGHEST, CON_FONTPCMAX,
  TUINTEGER|PSYSTEM),
CVI(GRAPHICS, HIGHEST, CON_FONTSCALE, cConsole->SetTextScale,
  GLfloat, TUFLOATSAVE|PANY),
CVI(GRAPHICS, HIGHEST, CON_FONTSPACING, cConsole->SetTextSpacing,
  GLfloat, TFLOAT|PSYSTEM),
CVI(GRAPHICS, HIGHEST, CON_FONTLSPACING, cConsole->SetTextLineSpacing,
  GLfloat, TFLOAT|PSYSTEM),
CVN(GRAPHICS, HIGHEST, CON_FONTWIDTH,
  TUFLOAT|PSYSTEM),
CVN(GRAPHICS, HIGHEST, CON_FONTTEXSIZE,
  TUINTEGER|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, CON_INPUTMAX, cConsole->SetMaxConLineChars,
  size_t, TUINTEGERSAVE|PANY),
CVI(TEXT_NOAUDIO, HIGHEST, CON_PAGELINES, cConsole->SetPageMoveCount,
  int, TUINTEGERSAVE|PANY),
CVI(TEXT_NOAUDIO, TEXT_MAX, CON_TMCCOLS, cSystem->ColsModified,
  unsigned int, TUINTEGERSAVE|PANY),
CVI(TEXT_NOAUDIO, TEXT_MAX, CON_TMCROWS, cSystem->RowsModified,
  unsigned int, TUINTEGERSAVE|PANY),
CVI(TEXT_NOAUDIO, TEXT_MAX, CON_TMCREFRESH, cConsole->RefreshModified,
  unsigned int, TUINTEGERSAVE|PANY),
CVN(TEXT_NOAUDIO, TEXT_MAX, CON_TMCNOCLOSE,
  TBOOLEAN|PBOOT|PSYSTEM),
CVS(TEXT_NOAUDIO, TEXT_MAX, CON_TMCTFORMAT, cConsole->SetTimeFormat,
  TSTRINGSAVE|MTRIM|CNOTEMPTY|PSYSTEM|PUSR),
/* -- Fmv cvars ------------------------------------------------------------ */
CVI(GRAPHICS, HIGHEST, FMV_IOBUFFER, VideoSetBufferSize,
  long, TUINTEGERSAVE|CPOW2|PANY),
/* -- Input cvars ---------------------------------------------------------- */
CVI(GRAPHICS, HIGHEST, INP_JOYDEFFDZ, cInput->SetDefaultJoyFwdDZ,
  float, TUFLOATSAVE|PANY),
CVI(GRAPHICS, HIGHEST, INP_JOYDEFRDZ, cInput->SetDefaultJoyRevDZ,
  float, TUFLOATSAVE|PANY),
CVI(GRAPHICS, HIGHEST, INP_JOYSTICK, cInput->SetJoystickEnabled,
  int, TINTEGERSAVE|PANY),
CVI(GRAPHICS, HIGHEST, INP_FSTOGGLER, cInput->SetFSTogglerEnabled,
  bool, TBOOLEANSAVE|PANY),
CVI(GRAPHICS, HIGHEST, INP_RAWMOUSE, cInput->SetRawMouseEnabled,
  bool, TBOOLEANSAVE|PANY),
CVI(GRAPHICS, HIGHEST, INP_STICKYKEY, cInput->SetStickyKeyEnabled,
  bool, TBOOLEANSAVE|PANY),
CVI(GRAPHICS, HIGHEST, INP_STICKYMOUSE, cInput->SetStickyMouseEnabled,
  bool, TBOOLEANSAVE|PANY),
/* -- Network cvars -------------------------------------------------------- */
CVI(TEXT_NOAUDIO, HIGHEST, NET_CBPFLAG1, cSockets->CertsSetBypassFlags1,
  uint64_t, TUINTEGER|PBOOT|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, NET_CBPFLAG2, cSockets->CertsSetBypassFlags2,
  uint64_t, TUINTEGER|PBOOT|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, NET_BUFFER, SocketSetBufferSize,
  size_t, TUINTEGER|CPOW2|PBOOT|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, NET_RTIMEOUT, SocketSetRXTimeout,
  double, TUFLOAT|PBOOT|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, NET_STIMEOUT, SocketSetTXTimeout,
  double, TUFLOAT|PBOOT|PSYSTEM),
CVN(TEXT_NOAUDIO, HIGHEST, NET_CIPHERTLSv1,
  MTRIM|TSTRING|PSYSTEM),
CVN(TEXT_NOAUDIO, HIGHEST, NET_CIPHERTLSv13,
  MTRIM|TSTRING|PSYSTEM),
CVS(TEXT_NOAUDIO, HIGHEST, NET_CASTORE, cSockets->CertsFileModified,
  TSTRING|CFILENAME|MTRIM|PSYSTEM),
CVI(TEXT_NOAUDIO, HIGHEST, NET_OCSP, SocketOCSPModified,
  int, TUINTEGER|PANY),
CVS(TEXT_NOAUDIO, HIGHEST, NET_USERAGENT, SocketAgentModified,
  TSTRING|MTRIM|PBOOT|PSYSTEM),
/* -- Video cvars ---------------------------------------------------------- */
CVN(GRAPHICS, HIGHEST, VID_ALPHA,
  TBOOLEAN|PSYSTEM),
CVI(GRAPHICS, HIGHEST, VID_CLEAR, cFboMain->SetBackBufferClear,
  bool, TBOOLEAN|PSYSTEM),
CVI(GRAPHICS, HIGHEST, VID_CLEARCOLOUR, cFboMain->SetBackBufferClearColour,
  unsigned int, TUINTEGER|PSYSTEM),
CVN(GRAPHICS, HIGHEST, VID_DEBUG,
  TBOOLEANSAVE|PANY),
CVI(GRAPHICS, HIGHEST, VID_FS, cDisplay->FullScreenStateChanged,
  bool, TBOOLEANSAVE|PANY),
CVI(GRAPHICS, HIGHEST, VID_FSMODE, cDisplay->FullScreenModeChanged,
  int, TINTEGERSAVE|PANY),
CVI(GRAPHICS, HIGHEST, VID_LOCK, cFboMain->SetLockViewport,
  bool, TBOOLEAN|PSYSTEM),
CVI(GRAPHICS, HIGHEST, VID_MONITOR, cDisplay->MonitorChanged,
  int, TINTEGERSAVE|PANY),
CVI(GRAPHICS, HIGHEST, VID_GAMMA, cDisplay->GammaChanged,
  GLfloat, TUFLOATSAVE|PANY),
CVI(GRAPHICS, HIGHEST, VID_FSAA, cDisplay->FsaaChanged,
  int, TINTEGERSAVE|CPOW2Z|PANY),
CVN(GRAPHICS, HIGHEST, VID_BPP,
  TUINTEGER|PANY),
CVI(GRAPHICS, HIGHEST, VID_HIDPI, cDisplay->HiDPIChanged,
  bool, TBOOLEANSAVE|PANY),
CVN(GRAPHICS, HIGHEST, VID_STEREO,
  TBOOLEANSAVE|PANY),
CVN(GRAPHICS, HIGHEST, VID_NOERRORS,
  TBOOLEANSAVE|PANY),
CVN(GRAPHICS, HIGHEST, VID_SRGB,
  TBOOLEANSAVE|PANY),
CVI(GRAPHICS, HIGHEST, VID_AUXBUFFERS, cDisplay->AuxBuffersChanged,
  int, TINTEGERSAVE|PANY),
CVI(GRAPHICS, HIGHEST, VID_SIMPLEMATRIX, cFboMain->SetSimpleMatrix,
  bool, TBOOLEAN|PSYSTEM),
CVI(GRAPHICS, HIGHEST, VID_TEXFILTER, cFboMain->SetFilter,
  size_t, TUINTEGERSAVE|PANY),
CVN(GRAPHICS, HIGHEST, VID_VSYNC,
  TINTEGERSAVE|PANY),
CVN(GRAPHICS, HIGHEST, VID_GASWITCH,
  TBOOLEANSAVE|PANY),
CVI(GRAPHICS, HIGHEST, VID_WIREFRAME, cOgl->SetPolygonMode,
  bool, TBOOLEANSAVE|PANY),
CVI(GRAPHICS, HIGHEST, VID_ORWIDTH, cDisplay->SetOrthoWidth,
  GLfloat, TUFLOAT|PSYSTEM),
CVI(GRAPHICS, HIGHEST, VID_ORHEIGHT, cDisplay->SetOrthoHeight,
  GLfloat, TUFLOAT|PSYSTEM),
CVI(GRAPHICS, HIGHEST, VID_ORASPMIN, cFboMain->SetMinOrtho,
  GLfloat, TUFLOAT|PSYSTEM),
CVI(GRAPHICS, HIGHEST, VID_ORASPMAX, cFboMain->SetMaxOrtho,
  GLfloat, TUFLOAT|PSYSTEM),
CVI(GRAPHICS, HIGHEST, VID_RFBO, FboSetOrderReserve,
  size_t, TINTEGER|PSYSTEM|CUNSIGNED|PBOOT),
CVI(GRAPHICS, HIGHEST, VID_RFLOATS, cFboMain->SetFloatReserve,
  size_t, TINTEGER|PSYSTEM|CUNSIGNED|PBOOT),
CVI(GRAPHICS, HIGHEST, VID_RCMDS, cFboMain->SetCommandReserve,
  size_t, TINTEGER|PSYSTEM|CUNSIGNED|PBOOT),
CVI(GRAPHICS, HIGHEST, VID_RDTEX, cOgl->SetTexDListReserve,
  size_t, TINTEGER|PSYSTEM|CUNSIGNED|PBOOT),
CVI(GRAPHICS, HIGHEST, VID_RDFBO, cOgl->SetFboDListReserve,
  size_t, TINTEGER|PSYSTEM|CUNSIGNED|PBOOT),
CVI(GRAPHICS, HIGHEST, VID_SSTYPE, SetScreenShotType,
  size_t, TUINTEGERSAVE|PANY),
CVI(GRAPHICS, HIGHEST, VID_SUBPIXROUND, SetSPRoundingMethod,
  size_t, TUINTEGER|PSYSTEM),
CVI(GRAPHICS, HIGHEST, VID_QSHADER, cOgl->SetQShaderHint,
  size_t, TUINTEGERSAVE|PANY),
CVI(GRAPHICS, HIGHEST, VID_QLINE, cOgl->SetQLineHint,
  size_t, TUINTEGERSAVE|PANY),
CVI(GRAPHICS, HIGHEST, VID_QPOLYGON, cOgl->SetQPolygonHint,
  size_t, TUINTEGERSAVE|PANY),
CVI(GRAPHICS, HIGHEST, VID_QCOMPRESS, cOgl->SetQCompressHint,
  size_t, TUINTEGERSAVE|PANY),
CVN(GRAPHICS, HIGHEST, WIN_ASPECT,
  TUFLOAT|PSYSTEM),
CVI(GRAPHICS, HIGHEST, WIN_BORDER, cDisplay->BorderChanged,
  bool, TBOOLEAN|PANY),
CVI(GRAPHICS, HIGHEST, WIN_CLOSEABLE, cDisplay->CloseableChanged,
  bool, TBOOLEAN|PANY),
CVI(GRAPHICS, HIGHEST, WIN_FLOATING, cDisplay->FloatingChanged,
  bool, TBOOLEAN|PANY),
CVI(GRAPHICS, HIGHEST, WIN_FOCUSED, cDisplay->AutoFocusChanged,
  bool, TBOOLEAN|PANY),
CVI(GRAPHICS, HIGHEST, WIN_HEIGHT, cDisplay->HeightChanged,
  int, TUINTEGERSAVE|PANY),
CVN(GRAPHICS, HIGHEST, WIN_HEIGHTMIN,
  TUINTEGER|PSYSTEM),
CVN(GRAPHICS, HIGHEST, WIN_MAXIMISED,
  TBOOLEAN|PANY),
CVI(GRAPHICS, HIGHEST, WIN_MINIMISEAUTO, cDisplay->AutoIconifyChanged,
  bool, TBOOLEAN|PANY),
CVN(GRAPHICS, HIGHEST, WIN_POSX,
  TINTEGERSAVE|PANY),
CVN(GRAPHICS, HIGHEST, WIN_POSY,
  TINTEGERSAVE|PANY),
CVI(GRAPHICS, HIGHEST, WIN_SIZABLE, cDisplay->SizableChanged,
  bool, TBOOLEAN|PANY),
CVN(GRAPHICS, HIGHEST, WIN_THREAD,
  TBOOLEANSAVE|PANY),
CVI(GRAPHICS, HIGHEST, WIN_WIDTH, cDisplay->WidthChanged,
  int, TUINTEGERSAVE|PANY),
CVN(GRAPHICS, HIGHEST, WIN_WIDTHMIN,
  TUINTEGER|PSYSTEM),
/* -- Logging cvars -------------------------------------------------------- */
CVI(TEXT_NOAUDIO, HIGHEST, LOG_CREDITS, CreditDumpList,
  bool, TBOOLEAN|PANY),
CVI(TEXT_NOAUDIO, HIGHEST, LOG_DYLIBS, cSystem->DumpModuleList,
  bool, TBOOLEAN|PANY),
/* -- Undefines ------------------------------------------------------------ */
#undef CVN                             // Done with noop function callback
#undef CVI                             // Done with cvar define helper callback
#undef CVS                             // Done with cvar define helper callback
#undef CV                              // Done with cvar define helper callback
#undef CBSTR                           // Done with string function callback
#undef CB                              // Done with int function callback
#undef F                               // Done with flag helper
/* ------------------------------------------------------------------------- */
} };
/* -- End of module namespace ---------------------------------------------- */
};                                     // End of interface
/* == EoF =========================================================== EoF == */
